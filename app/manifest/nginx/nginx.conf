user  www www;
worker_processes auto;
error_log  /www/wwwlogs/nginx_error.log  crit;
pid        /www/server/nginx/logs/nginx.pid;
worker_rlimit_nofile 51200;

stream {
    log_format tcp_format '$time_local|$remote_addr|$protocol|$status|$bytes_sent|$bytes_received|$session_time|$upstream_addr|$upstream_bytes_sent|$upstream_bytes_received|$upstream_connect_time';
  
    access_log /www/wwwlogs/tcp-access.log tcp_format;
    error_log /www/wwwlogs/tcp-error.log;
    include /www/server/panel/vhost/nginx/tcp/*.conf;
}

events
    {
        use epoll;
        worker_connections 51200;
        multi_accept on;
    }

http
    {
        include       mime.types;
		#include luawaf.conf;

		include proxy.conf;

        default_type  application/octet-stream;

        server_names_hash_bucket_size 512;
        client_header_buffer_size 32k;
        large_client_header_buffers 4 32k;
        client_max_body_size 50m;

        sendfile   on;
        tcp_nopush on;

        keepalive_timeout 60;

        tcp_nodelay on;

        fastcgi_connect_timeout 300;
        fastcgi_send_timeout 300;
        fastcgi_read_timeout 300;
        fastcgi_buffer_size 64k;
        fastcgi_buffers 4 64k;
        fastcgi_busy_buffers_size 128k;
        fastcgi_temp_file_write_size 256k;
		fastcgi_intercept_errors on;

        gzip on;
        gzip_min_length  1k;
        gzip_buffers     4 16k;
        gzip_http_version 1.1;
        gzip_comp_level 2;
        gzip_types     text/plain application/javascript application/x-javascript text/javascript text/css application/xml;
        gzip_vary on;
        gzip_proxied   expired no-cache no-store private auth;
        gzip_disable   "MSIE [1-6]\.";

        limit_conn_zone $binary_remote_addr zone=perip:10m;
		limit_conn_zone $server_name zone=perserver:10m;

        server_tokens off;
        access_log off;

server
    {	
        listen 443 ssl;
        server_name stellaris.wang www.stellaris.wang;
        charset utf-8;
		
		#网站证书文件位置
        ssl_certificate /www/cert/stellaris.wang/stellaris.wang_bundle.crt;
        ssl_certificate_key /www/cert/stellaris.wang/stellaris.wang.key;
		
		#https会话缓存大小
		ssl_session_cache shared:SSL:10m;
		#https会话超时时间
		ssl_session_timeout 5m;
		#使用的TLS协议的类型
		ssl_protocols TLSv1.2 TLSv1.3; 
		#配置加密套件类型，写法遵循 openssl 标准
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
		ssl_prefer_server_ciphers on;
		
		access_log /www/wwwroot/www.stellaris.wang/gf-app-access.log;
		error_log /www/wwwroot/www.stellaris.wang/gf-app-error.log;
		
		
		# 将指定的静态文件转交给nginx处理
		location ~ .*\.(gif|jpg|jpeg|png|js|css|eot|ttf|woff|svg|otf)$ {
			access_log off;
			expires    1d;
			root       /www/wwwroot/www.stellaris.wang/JD-WEB/app/resource/public/resource;
			try_files  $uri @backend;
		}
		
		# 其他的请求转交给golang应用
		location / {
			try_files $uri @backend;
		}
		
		location @backend {
			proxy_pass http://stellaris.wang:8080;
			proxy_redirect off;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			root /www/wwwroot/www.stellaris.wang/resource;
			index index.html index.htm;
		}
		
		error_page 500 502 503 504 /50x.html;
        location = /50x.html{
          root html;
        }
}

#使用全站加密，http自动跳转https
#对于用户不知道网站可以进行https访问的情况下，让服务器自动把http的请求重定向到https
server
	{
		listen 80;
		server_name stellaris.wang www.stellaris.wang;
		rewrite ^(.*) https://$host$1 permanent;
	}


    

    
  
include /www/server/panel/vhost/nginx/*.conf;
}

